defaults:
  - _self_
  - agent: pearl
  - optional training: ${agent}
  - optional validation: ${agent}
  - optional sweep: ${agent}


agent:
# modify the name!
  experiment_name: "${agent.name}"

  

training:
  n_train_tasks: 100
  pass_env_parameters: False
  ood: True
  random: True
  episodes: 500
  num_initial_steps: 1000 # number of transitions collected per task before training
  num_train_steps_per_itr: 100 # 2000
  num_tasks_sample: 5 # number of randomly sampled tasks to collect data for each iteration
  seed: 0
  noise: 'Ornstein' #'Zero','Gaussian', 'Ornstein'
  noise_param: 0.2
  max_path_length: 1000 #200 max path length for this environment
  abort_training_after: 80 # if average reward does not increase for abort_training_after many episodes, abort training


validation:
  use_wandb: True
  # legacy
  log_model_wandb: False

  # hypercube validation is not possible (it makes no sense), if env is NOT random 
  hypercube_validation: True
  hypercube_points_per_axis: 3 # maybe it makes sense to have 4 points on gravity axis, to not only test the extremes
  # eval_eps will be calculated automatically in case of hypercube validation
  eval_eps: 1 #50
  n_eval_tasks: 5 #in case of hypecube validation this will be overwritten by hypercube_points_per_axis

  eval_stop_condition: 'min' # 'min', 'avg', 'max': how results from eval_eps are aggregated
  eval_interval: 10
  record_video_on_eval: False
  validation_episode_length: 1000
  validation_traj_num: 3 # must be larger than num_exp_traj_eval, else pearl cannot collect context to inform the policy
  num_exp_traj_eval: 1 # must be at least 1 and smaller than validation_traj_num
  log_actions: True

env:
  seed: 0
  deterministic_reset: True
  random_wind_on_reset: True
  random: True
  random_type: 'Uniform' # 'Uniform', 'Gaussian'
  # if you set any of bounds precisely, there will be the error in validation
  gravity_lower: -11.999 # -11.999 from -12 to 0
  gravity_upper: -1.0 # -0.0001 from -12 to 0
  wind_probability: 0.5
  wind_power_lower: 0 # from 0 to 20
  wind_power_upper: 10 # from 0 to 20
  turbulence_power_lower: 0 # from 0 to 2
  turbulence_power_upper: 1  # from 0 to 2

  # If randomize type == Fixed, then these parameters will be used always
  default_gravity: -10
  default_wind: False
  default_wind_power: 0
  default_turbulence_power: 1.5

  out_of_distribution:
    train:
      gravity_lower: -4.0 # -11.999 from -12 to 0
      gravity_upper: -1.0 # -0.0001 from -12 to 0
      wind_probability: 0.5
      wind_power_lower: 0 # from 0 to 20
      wind_power_upper: 2 # from 0 to 20
      turbulence_power_lower: 0 # from 0 to 2
      turbulence_power_upper: 0.5  # from 0 to 2
    eval:
      gravity_lower: -11.999 # -11.999 from -12 to 0
      gravity_upper: -7.0 # -0.0001 from -12 to 0
      wind_probability: 0.5
      wind_power_lower: 5 # from 0 to 20
      wind_power_upper: 10 # from 0 to 20
      turbulence_power_lower: 0.6 # from 0 to 2
      turbulence_power_upper: 1.0  # from 0 to 2


sweep:
  activate: False

  
  

